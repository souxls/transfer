// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	file4 "transfer/api/v1/file"
	user3 "transfer/api/v1/user"
	"transfer/internal/app/model/file"
	"transfer/internal/app/model/permession"
	"transfer/internal/app/model/user"
	"transfer/internal/app/router"
	file3 "transfer/internal/app/service/file"
	permession2 "transfer/internal/app/service/permession"
	user2 "transfer/internal/app/service/user"
	file2 "transfer/internal/app/storage/file"
)

// Injectors from wire.go:

func BuildInjector() (*Injector, func(), error) {
	db := InitDB()
	userRepo := &user.UserRepo{
		DB: db,
	}
	service := &user2.Service{
		UserRepo: userRepo,
	}
	permessionRepo := &permession.PermessionRepo{
		DB: db,
	}
	permessionService := &permession2.Service{
		PermessionRepo: permessionRepo,
	}
	api := &user3.API{
		UserService:        service,
		PermesssionService: permessionService,
	}
	fileRepo := &file.FileRepo{
		DB: db,
	}
	client := InitMinIO()
	storage := &file2.Storage{
		MinIOClient: client,
	}
	fileService := &file3.Service{
		FileRepo:          fileRepo,
		PermessionRepo:    permessionRepo,
		PermessionSrvRepo: permessionService,
		FileStorage:       storage,
	}
	fileAPI := &file4.API{
		FileService:        fileService,
		PermesssionService: permessionService,
	}
	routerRouter := &router.Router{
		UserAPI:     api,
		FileAPI:     fileAPI,
		UserService: service,
	}
	engine := InitGinEngine(routerRouter)
	injector := &Injector{
		Engine: engine,
	}
	return injector, func() {
	}, nil
}
